[require]
GLSL >= 1.10

[vertex shader]
uniform float one;
uniform int count;

void main()
{
    vec4 array[8];
    array[0] = vec4(0.2, 0,   0,   0) * one;
    array[1] = vec4(0,   0.2, 0,   0) * one;
    array[2] = vec4(0,   0,   0.2, 0) * one;
    array[3] = vec4(0.2, 0.2, 0,   0) * one;
    array[4] = vec4(0,   0.2, 0.2, 0) * one;
    array[5] = vec4(0.2, 0,   0.2, 0) * one;
    array[6] = vec4(0,   0,   0,   0) * one;
    array[7] = vec4(0.2, 0.2, 0.2, 0) * one;
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    vec4 res = vec4(0);
    for (int i = 0; i < count; i++)
        res += array[i];
    gl_FrontColor = res;
}

[fragment shader]
void main()
{
	gl_FragColor = gl_Color;
}

[test]
ortho
clear color 0.5 0.5 0.5 0.5
clear
uniform float one 1

uniform int count 0
draw rect 10 10 10 10
probe rgb 15 15 0 0 0

uniform int count 1
draw rect 30 10 10 10
probe rgb 35 15 0.2 0 0

uniform int count 2
draw rect 50 10 10 10
probe rgb 55 15 0.2 0.2 0

uniform int count 3
draw rect 70 10 10 10
probe rgb 75 15 0.2 0.2 0.2

uniform int count 4
draw rect 90 10 10 10
probe rgb 95 15 0.4 0.4 0.2

uniform int count 5
draw rect 110 10 10 10
probe rgb 115 15 0.4 0.6 0.4

uniform int count 6
draw rect 130 10 10 10
probe rgb 135 15 0.6 0.6 0.6

uniform int count 7
draw rect 150 10 10 10
probe rgb 155 15 0.6 0.6 0.6

uniform int count 8
draw rect 170 10 10 10
probe rgb 175 15 0.8 0.8 0.8

