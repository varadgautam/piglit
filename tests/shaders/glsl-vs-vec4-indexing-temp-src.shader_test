[require]
GLSL >= 1.10

[vertex shader]
uniform float one;
uniform int index;

void main()
{
    /* Intentionally initialize the array in a non-ascending order. */
    vec4 array[8];
    array[3] = vec4(1, 1, 0, 0) * one;
    array[6] = vec4(0, 0, 0, 0) * one;
    array[0] = vec4(1, 0, 0, 0) * one;
    array[4] = vec4(1, 0, 1, 0) * one;
    array[1] = vec4(0, 1, 0, 0) * one;
    array[2] = vec4(0, 0, 1, 0) * one;
    array[7] = vec4(1, 1, 1, 0) * one;
    array[5] = vec4(0, 1, 1, 0) * one;
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    gl_FrontColor = array[index];
}

[fragment shader]
void main()
{
	gl_FragColor = gl_Color;
}

[test]
ortho
clear color 0.5 0.5 0.5 0.5
clear
uniform float one 1
uniform int index 0
draw rect 10 10 10 10
probe rgb 15 15 1 0 0
uniform int index 1
draw rect 30 10 10 10
probe rgb 35 15 0 1 0
uniform int index 2
draw rect 50 10 10 10
probe rgb 55 15 0 0 1
uniform int index 3
draw rect 70 10 10 10
probe rgb 75 15 1 1 0
uniform int index 4
draw rect 90 10 10 10
probe rgb 95 15 1 0 1
uniform int index 5
draw rect 110 10 10 10
probe rgb 115 15 0 1 1
uniform int index 6
draw rect 130 10 10 10
probe rgb 135 15 0 0 0
uniform int index 7
draw rect 150 10 10 10
probe rgb 155 15 1 1 1

